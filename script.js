document.addEventListener('DOMContentLoaded', () => {
Â  Â  // 1. DeclaraciÃ³n de constantes y variables
Â  Â  const questions = [
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  Â  videoURL: 'https://garciaprieto-jr.github.io/00-Saludos-y-Despedidas---Harry-Potter/Hola.mp4',
Â  Â  Â  Â  Â  Â  question: 'Â¿QuÃ© saludo dice Harry cuÃ¡ndo entra a comprar la varita?',
Â  Â  Â  Â  Â  Â  options: ['Â¡Hola!', 'Â¡Buenas tardes!', 'Â¡QuÃ© tal!', 'Â¡Chao!'],
Â  Â  Â  Â  Â  Â  correctAnswer: 'Â¡Hola!'
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  Â  videoURL: 'https://garciaprieto-jr.github.io/00-Saludos-y-Despedidas---Harry-Potter/buenos%20dias.mp4', // Corregido el espacio en el nombre del archivo
Â  Â  Â  Â  Â  Â  question: 'Â¿QuÃ© saludo utilizarÃ­as en esta situaciÃ³n?',
Â  Â  Â  Â  Â  Â  options: ['Â¡Hola!', 'Â¡Buenas tardes!', 'Â¡Buenos dÃ­as!', 'Â¡AdiÃ³s!'],
Â  Â  Â  Â  Â  Â  correctAnswer: 'Â¡Buenos dÃ­as!'
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  Â  videoURL: 'https://garciaprieto-jr.github.io/00-Saludos-y-Despedidas---Harry-Potter/buenas%20tardes%20alumnos.mp4', // Corregidos los espacios en el nombre del archivo
Â  Â  Â  Â  Â  Â  question: 'Â¿QuÃ© saludo utiliza la profesora Madam Hooch?',
Â  Â  Â  Â  Â  Â  options: ['Â¡Buenos dÃ­as!', 'Â¡Hola, estudiantes!', 'Â¡Buenas tardes, alumnos!', 'Â¡Hasta luego!'],
Â  Â  Â  Â  Â  Â  correctAnswer: 'Â¡Buenas tardes, alumnos!'
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  Â  videoURL: 'https://garciaprieto-jr.github.io/00-Saludos-y-Despedidas---Harry-Potter/Adios.mp4',
Â  Â  Â  Â  Â  Â  question: 'QuÃ© dice Dumbledore para despedirse antes de salir de la casa ',
Â  Â  Â  Â  Â  Â  options: ['Â¡Chao!', 'Â¡AdiÃ³s!', 'Â¡Hasta luego!', 'Â¡Nos vemos!'],
Â  Â  Â  Â  Â  Â  correctAnswer: 'Â¡AdiÃ³s!'
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  Â  // NOTA: Un iframe no puede reproducir archivos .png o .jpg.
Â  Â  Â  Â  Â  Â  // Si deseas mostrar una imagen, necesitarÃ¡s cambiar la etiqueta de video por <img>
Â  Â  Â  Â  Â  Â  // en el HTML y modificar la lÃ³gica de loadQuestion()
Â  Â  Â  Â  Â  Â  videoURL: 'https://garciaprieto-jr.github.io/00-Saludos-y-Despedidas---Harry-Potter/hasta%20luego.png',
Â  Â  Â  Â  Â  Â  question: 'Harry y Ron van a ver a Hermione mÃ¡s tarde Â¿Como se despiden?',
Â  Â  Â  Â  Â  Â  options: ['Â¡AdiÃ³s!', 'Â¡Hasta luego!', 'Â¡Nos vemos!', 'Â¡Chao!'],
Â  Â  Â  Â  Â  Â  correctAnswer: 'Â¡Hasta luego!'
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  Â  videoURL: 'https://garciaprieto-jr.github.io/00-Saludos-y-Despedidas---Harry-Potter/chao.jpg',
Â  Â  Â  Â  Â  Â  question: 'Si Dobby el elfo fuera a despedirse de una forma informal, Â¿quÃ© dirÃ­a?',
Â  Â  Â  Â  Â  Â  options: ['Â¡Hola!', 'Â¡Buenos dÃ­as!', 'Â¡AdiÃ³s!', 'Â¡Chao!'],
Â  Â  Â  Â  Â  Â  correctAnswer: 'Â¡Chao!'
Â  Â  Â  Â  },
Â  Â  Â  Â  {
Â  Â  Â  Â  Â  Â  videoURL: 'https://garciaprieto-jr.github.io/00-Saludos-y-Despedidas---Harry-Potter/Buenas%20Noches.mp4', // Corregido el espacio en el nombre del archivo
Â  Â  Â  Â  Â  Â  question: 'Â¿CÃ³mo se despide el profesor LÃºpin del profesor Snake?',
Â  Â  Â  Â  Â  Â  options: ['Â¡Hola!', 'Â¡Profesor, buenas noches!', 'Â¡AdiÃ³s!', 'Â¡Chao!'],
Â  Â  Â  Â  Â  Â  correctAnswer: 'Â¡Profesor, buenas noches!'
Â  Â  Â  Â  }
Â  Â  ];

Â  Â  let currentQuestionIndex = 0;
Â  Â  const videoPlayer = document.getElementById('video-player');
Â  Â  const questionText = document.getElementById('question-text');
Â  Â  const optionsContainer = document.getElementById('options-container');
Â  Â  const feedbackMessage = document.getElementById('feedback-message');
Â  Â  const successSound = document.getElementById('success-sound');
Â  Â  const errorSound = document.getElementById('error-sound');
Â  Â  const gameContainer = document.querySelector('.game-container');
Â  Â  const startScreen = document.getElementById('start-screen');
Â  Â  const gameContent = document.getElementById('game-content');
Â  Â  const startButton = document.getElementById('start-button');
Â  Â  const backgroundMusic = document.getElementById('background-music');
Â  Â  const musicToggleButton = document.getElementById('music-toggle-btn');
Â  Â  let isMusicPlaying = false;

Â  Â  // 2. Funciones del juego
Â  Â  function shuffleArray(array) {
Â  Â  Â  Â  for (let i = array.length - 1; i > 0; i--) {
Â  Â  Â  Â  Â  Â  const j = Math.floor(Math.random() * (i + 1));
Â  Â  Â  Â  Â  Â  [array[i], array[j]] = [array[j], array[i]];
Â  Â  Â  Â  }
Â  Â  }

Â  Â  function loadQuestion() {
Â  Â  Â  Â  if (currentQuestionIndex >= questions.length) {
Â  Â  Â  Â  Â  Â  questionText.textContent = 'Â¡Juego Terminado! Â¡Eres un gran mago del espaÃ±ol!';
Â  Â  Â  Â  Â  Â  optionsContainer.style.display = 'none';
Â  Â  Â  Â  Â  Â  feedbackMessage.textContent = 'Recarga la pÃ¡gina para volver a jugar.';
Â  Â  Â  Â  Â  Â  videoPlayer.src = '';
Â  Â  Â  Â  Â  Â  return;
Â  Â  Â  Â  }
Â  Â  Â  Â  const currentQuestion = questions[currentQuestionIndex];
Â  Â  Â  Â  videoPlayer.src = currentQuestion.videoURL;
Â  Â  Â  Â  questionText.textContent = currentQuestion.question;
Â  Â  Â  Â  feedbackMessage.textContent = '';
Â  Â  Â  Â  gameContainer.classList.remove('correct-effect', 'error-effect');
Â  Â  Â  Â  const buttons = optionsContainer.getElementsByTagName('button');
Â  Â  Â  Â  for (let i = 0; i < buttons.length; i++) {
Â  Â  Â  Â  Â  Â  buttons[i].textContent = currentQuestion.options[i];
Â  Â  Â  Â  Â  Â  buttons[i].disabled = false;
Â  Â  Â  Â  Â  Â  buttons[i].style.backgroundColor = '';
Â  Â  Â  Â  }
Â  Â  }

Â  Â  // 3. Event listeners y lÃ³gica de los botones
Â  Â  musicToggleButton.addEventListener('click', () => {
Â  Â  Â  Â  if (isMusicPlaying) {
Â  Â  Â  Â  Â  Â  backgroundMusic.pause();
Â  Â  Â  Â  Â  Â  musicToggleButton.textContent = 'MÃºsica: OFF';
Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  backgroundMusic.play().catch(error => {
Â  Â  Â  Â  Â  Â  Â  Â  console.error("Error al intentar reproducir la mÃºsica:", error);
Â  Â  Â  Â  Â  Â  });
Â  Â  Â  Â  Â  Â  musicToggleButton.textContent = 'MÃºsica: ON';
Â  Â  Â  Â  }
Â  Â  Â  Â  isMusicPlaying = !isMusicPlaying;
Â  Â  });

Â  Â  startButton.addEventListener('click', () => {
Â  Â  Â  Â  startScreen.classList.add('hidden');
Â  Â  Â  Â  gameContent.classList.remove('hidden');
Â  Â  Â  Â  shuffleArray(questions);
Â  Â  Â  Â  loadQuestion();
Â  Â  });

Â  Â  // 4. Hacer la funciÃ³n checkAnswer accesible desde HTML
Â  Â  window.checkAnswer = (selectedIndex) => {
Â  Â  Â  Â  const currentQuestion = questions[currentQuestionIndex];
Â  Â  Â  Â  const selectedOption = currentQuestion.options[selectedIndex];
Â  Â  Â  Â  
Â  Â  Â  Â  // Deshabilita los botones mientras se procesa la respuesta
Â  Â  Â  Â  const buttons = optionsContainer.getElementsByTagName('button');
Â  Â  Â  Â  for (let i = 0; i < buttons.length; i++) {
Â  Â  Â  Â  Â  Â  buttons[i].disabled = true;
Â  Â  Â  Â  }

Â  Â  Â  Â  if (selectedOption === currentQuestion.correctAnswer) {
Â  Â  Â  Â  Â  Â  gameContainer.classList.add('correct-effect');
Â  Â  Â  Â  Â  Â  feedbackMessage.textContent = 'Â¡Correcto! âœ¨ Â¡Woooow!';
Â  Â  Â  Â  Â  Â  successSound.play();
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  // Espera un tiempo y pasa a la siguiente pregunta
Â  Â  Â  Â  Â  Â  setTimeout(() => {
Â  Â  Â  Â  Â  Â  Â  Â  successSound.pause();
Â  Â  Â  Â  Â  Â  Â  Â  successSound.currentTime = 0;
Â  Â  Â  Â  Â  Â  Â  Â  gameContainer.classList.remove('correct-effect');
Â  Â  Â  Â  Â  Â  Â  Â  currentQuestionIndex++;
Â  Â  Â  Â  Â  Â  Â  Â  loadQuestion();
Â  Â  Â  Â  Â  Â  }, 2000);
Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  gameContainer.classList.add('error-effect');
Â  Â  Â  Â  Â  Â  feedbackMessage.textContent = 'Â¡Incorrecto! Vuelve a intentarlo. ðŸ˜¥';
Â  Â  Â  Â  Â  Â  errorSound.play();
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  // Espera un tiempo y habilita los botones para reintentar
Â  Â  Â  Â  Â  Â  setTimeout(() => {
Â  Â  Â  Â  Â  Â  Â  Â  errorSound.pause();
Â  Â  Â  Â  Â  Â  Â  Â  errorSound.currentTime = 0;
Â  Â  Â  Â  Â  Â  Â  Â  gameContainer.classList.remove('error-effect');
Â  Â  Â  Â  Â  Â  Â  Â  // Habilitar solo los botones para reintentar
Â  Â  Â  Â  Â  Â  Â  Â  for (let i = 0; i < buttons.length; i++) {
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  buttons[i].disabled = false;
Â  Â  Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  Â  Â  }, 1500); // Reduje el tiempo para que el usuario pueda reintentar mÃ¡s rÃ¡pido
Â  Â  Â  Â  }
Â  Â  };
});
    });
});

